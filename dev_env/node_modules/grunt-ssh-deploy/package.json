{
  "name": "grunt-ssh-deploy",
  "description": "Grunt SSH deployment",
  "version": "0.2.2",
  "homepage": "https://github.com/dasuchin/grunt-ssh-deploy",
  "author": {
    "name": "Dustin Carlson",
    "email": "dustin@dustincarlson.org",
    "url": "http://dustincarlson.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dasuchin/grunt-ssh-deploy.git"
  },
  "bugs": {
    "url": "https://github.com/dasuchin/grunt-ssh-deploy/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/dasuchin/grunt-ssh-deploy/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt": "~0.4.4"
  },
  "peerDependencies": {
    "grunt": "~0.4.4"
  },
  "keywords": [
    "gruntplugin",
    "ssh",
    "deploy",
    "releases"
  ],
  "dependencies": {
    "async": "^0.8.0",
    "extend": "^1.3.0",
    "moment": "^2.6.0",
    "ssh2": "^0.2.22"
  },
  "readme": "# grunt-ssh-deploy (Version: 0.2.2)\n\n> SSH Deployment for Grunt using [ssh2](https://github.com/mscdex/ssh2).\n\n## Getting Started\nThis plugin requires Grunt `~0.4.4`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-ssh-deploy --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-ssh-deploy');\n```\n\n## The tasks\n\n### Overview\nIn your project's Gruntfile, add a section named `environments` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  environments: {\n    environment: {\n      // Environment specific options here\n    }\n  },\n});\n```\n\nThis plugin will connect to your remote host, add a directory to releases/ in your `remote_path`, and create a symlink to the latest release.\n\nThe symlink by default is `current`, you can change this by setting `current_symlink`. \n\n### Usage\nBy setting an environment, you can deploy each specific one with `grunt ssh_deploy:environment` or rolling back with `grunt ssh_rollback:environment`.\n\n### Options\n\n#### options.host\nType: `String`\n\nRemote host to connect to.\n\n#### options.username\nType: `String`\n\nThe username to connect as on the remote server.\n\n#### options.password\nType: `String`\n\nPassword for the username on the remote server.\n\n#### options.privateKey\nType: `string`\n\nPath to your private key `privateKey: require('fs').readFileSync('/path/to/private/key')`\n\n#### options.agent\nType: `string`\n\nSet agent `agent: process.env.SSH_AUTH_SOCK`\n\n#### options.port\nType: `String`\nDefault value: `'22'`\n\nPort to connect to on the remote server.\n\n#### options.deploy_path\nType: `String`\n\nFull path on the remote server where files will be deployed. No trailing slash needed.\n\n#### options.local_path\nType: `String`\n\nPath on your local for the files you want to be deployed to the remote server. No trailing slash needed.\n\n#### options.current_symlink\nType: `String`\nDefault value: `'current'`\n\nPath to directory to symlink with most recent release.\n\n#### options.before_deploy, options.after_deploy\nType: `String`\n\nCommands to run on the server before and after deploy directory is created and symlinked. \n\n### Usage Examples\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n  // do not store credentials in the git repo, store them separately and read from a secret file\n  secret: grunt.file.readJSON('secret.json'),\n  environments: {\n      staging: {\n          options: {\n              host: '<%= secret.staging.host %>',\n              username: '<%= secret.staging.username %>',\n              password: '<%= secret.staging.password %>',\n              port: '<%= secret.staging.port %>',\n              deploy_path: '/full/path',\n              local_path: 'dist',\n              current_symlink: 'current',\n              debug: true\n          }\n      },\n      production: {\n          options: {\n              host: '<%= secret.production.host %>',\n              username: '<%= secret.production.username %>',\n              password: '<%= secret.production.password %>',\n              port: '<%= secret.production.port %>',\n              deploy_path: '/full/path',\n              local_path: 'dist',\n              current_symlink: 'current'\n          }\n      }\n  }\n});\n```\n\n### Before and After Hooks\n```js\ngrunt.initConfig({\n  environments: {\n    production: {\n      host: '123.45.67.89',\n      username: 'root',\n      password: 'password',\n      deploy_path: '/sites/great_project',\n      local_path: '.',\n      before_deploy: 'cd /sites/great_project/releases/current && forever stopall',\n      after_deploy: 'cd /sites/great_project/releases/current && npm install && forever start app.js'\n    }\n  },\n});\n```\n\n## Release History\n* 2014/06/23 - v0.2.0 - Added rollback functionality.\n* 2014/06/19 - v0.1.7 - Fixed symlink method to cd into deploy_path before setting symlink.\n* 2014/05/04 - v0.1.5 - Changing symlink method to not use full path.\n* 2014/05/04 - v0.1.0 - Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ssh-deploy@0.2.2",
  "dist": {
    "shasum": "3f3a4a55e89bdaa21c1f7fc2af2de4ecb26cc699"
  },
  "_from": "grunt-ssh-deploy@",
  "_resolved": "https://registry.npmjs.org/grunt-ssh-deploy/-/grunt-ssh-deploy-0.2.2.tgz"
}
